<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PresenterStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAEBAQAAAABAAoAQAARgAAACAgEAAAAAQA6AIAAG4BAAAQEAAAAAAYAGgDAABWBAAAICAAAAAA
        GACoDAAAvgcAACgAAAAQAAAAIAAAAAEABAAAAAAAgAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAACAAACA
        AAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//
        AAD//wAAKAAAACAAAABAAAAAAQAEAAAAAAAAAgAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAIAAAIAAAACA
        gACAAAAAgACAAICAAACAgIAAwMDAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////KAAAABAAAAAgAAAAAQAYAAAAAAAAAwAAAAAAAAAA
        AAAAAAAAAAAAAJ+fn1BQUExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTE9PT5ubm0hI
        SEFBQTw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PEFBQUdHR0pKSjw8PDY2Njc3Nzc3
        Nzc3Nzg4ODU1NTIyMjMzMzc4ODc3Nzc3NzY2Njs7O0pKSkpKSjw8PDc3NzQ0MzEwLzEwLzAuLT89O11Z
        VE9NSjMzMzc3Nzc3Nzc3Nzs7O0pKSkpKSjw8PDQ0NEpLS2JkZ2FkZ11eXoOQo0GQ+Xui11dNQDEvLTc3
        NzY2Njs7O0pKSkpKSjw8PDIuKnCCnTaO/yeA/ySB/xx7/wBi/BNy/F2V42lscTMxLjY2Njs7O0pKSklJ
        STs7OzMvKWZ9nQBr/yd89EGI7DyJ9QBp/SR//gVq/06R8FdUUDExMDs7O0pKSklJSTs7OzMvKWZ8mgRu
        /26Tx1VKO3Z6fmGQ0ZKht1iN1whw/2p4izEuKjs7O0lJSUhISDk5OTEtKGV7mARs/GSKwDcxJjEvLD84
        LjwyJWGHugJr/WR7mTItKDo6OklJSUtLS0REREA/PHqDkS2A9V6T3YWFhnR1d3R2eHh2c32fziJ69XKE
        njo3Mjs7O0dHR2RkZFtbW1NTU2xoZHmi3SV47UCI7UiM60iM60iM7D2E50GK8ISTqlNQTFZWVlpaWmdn
        Z1lZWVRUVFBQT3V0c4CdxWCU3FuS31yT312T32ia4H6r6YiSoVBOS1paWmhoaGZmZllZWVRUVFVVVVFQ
        T1tXUmxoY29sZ29sZ29sZ25rZ21qZ11cW1NTU1lZWWZmZmRkZFlZWVNTU1RUVFRUVFRUVFFRUVFRUFFR
        UFFRUFFRUFFRUFNTU1NTU1hYWGVlZWNjY15eXllZWVpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpaWlpa
        WllZWV5eXmNjY7S0tGhoaGZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmhoaLCwsAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAoAAAAIAAAAEAAAAABABgAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAA////o6OjVlZWRUVFRUVFRUVF
        RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVF
        RUVFRUVFRUVFU1NTnJyc/f39qKioODg4PT09RERERERERERERERERERERERERERERERERERERERERERE
        REREREREREREREREREREREREREREREREREREREREREREREREREREREREREREPj4+ODg4m5ubU1NTPT09
        SUlJQkJCPj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+
        Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+QUFBSUlJPj4+T09PQkJCQ0NDQkJCNjY2Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NjY2QEBA
        REREQ0NDREREQ0NDQEBANzc3ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4
        ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4Nzc3Pj4+REREREREQ0NDQ0NDQEBANzc3ODg4ODg4
        ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4
        ODg4ODg4Nzc3Pj4+REREQ0NDQ0NDQ0NDPz8/NjY2Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3ODg4Nzc3Nzc3
        ODg4MzMzMDAwMDAwLy8vNDQ0ODg4Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NjY2Pj4+REREQ0NDQ0NDQ0ND
        Pz8/NjY2Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NDU1UU9NcWthcmthb2lhRkZFNTU1Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NjY2Pj4+REREQ0NDQ0NDQ0NDPz8/NjY2Nzc3Nzc3Nzc3LS0tLCwrLCsr
        LCwrLCsrLCsrKioqMC0qt8HQhbr/gbT/k8P/pKerKikoNzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NjY2Pj4+
        REREQ0NDQkJCQkJCPz8/NjY2Nzc3NjY2Nzc3goB/mpeSmZeSmZaSmZeSmZeSmJWRopyUvtLuAGb/AFz/
        FXr/zM7OWVJIMTAuMTExNzc3Nzc3Nzc3Nzc3Nzc3NjY2Pj4+Q0NDQkJCQkJCQkJCPz8/NjY2Nzc3MjIy
        VFBKrc36S5b/S5n/S5n/S5n/S5n/S5r/Spn/NIj+AGj7AGf7B2z7YKD/nL/ysbS1VVFLLi4uODg4Nzc3
        Nzc3Nzc3NjY2Pj4+Q0NDQkJCQkJCQkJCPz8/NTU1Nzc3MjIyW1VMiLXyAFz8AGH5AGH5AGH5AGH5AGH5
        AGH5AGL5AGj5AGj5AGf5AF/5AGP8P5D/vM/nYVxVLi4vNzc3Nzc3NjY2NTU1PT09Q0NDQkJCQkJCQkJC
        Pz8/NTU1NjY2MjIyWlRLjLbxAGL5AGf2AGX2AGD3AGL5AGL4AGL4AGH2AGb2AWf2Bmr2AF71AGP2AF72
        IH3/vcnbQ0A7MzMzNjY2NjY2NjY2PT09Q0NDQkJCQUFBQkJCPj4+NTU1NjY2MTExWVNLjLXwAGD2AGHy
        JHv1msD2lbvxlbzyl73yfLD4AGPzB2rzJnz0eLD9GHT3AGLyAFvzZKf/lpKLKysqNjY2NjY2NTU1PT09
        Q0NDQUFBQUFBQkJCPj4+NTU1NjY2MTExWVRLjLXuAF/yAFzuR5P+tq+lUkxDWlRNZVxQxdPmL4j/Noj9
        WJ//5uLcn7rgB2b0AGDvEnP6q7jKNzUxNTU1NjY2NTU1PT09Q0NDQUFBQUFBQkJCPj4+NTU1NjY2MTEx
        WVRMjLXtAF7uAFvrRZL9mZeVJiQjMDAwLi0thIWHpquzpaqypquyZGRio6OjM4f7AF3rAF/wlbbkTkhB
        MzMzNjY2NTU1PT09Q0NDQUFBQUFBQkJCPj4+NTU1NjY2MTExWlVMjLTsAFzrAFroRZH7nJqYKikoNjY2
        NTU1LS0tLy4sMC4sLy4sJCMinJqXRpL7AFroAFzrjLTsWVRMMTExNjY2NTU1PT09Q0NDQUFBQEBAQkJC
        Pz8/NTU1NTU1MDAwVE9HjbPpAFnoAFnkP4z4n56dLCsqODg4ODg4ODg4Nzc3Nzc3NjY2KSkomZeURpH4
        AFfkAFnnjLPqWVRMMTExNjY2NTU1PT09Q0NDQEBAQEBAQUFBPDw8MzMzNzc3OTk5UUxHo7veGG3qGm3l
        PIfxvsPIT0tHSEhHSUlJSUlJSEhIR0dHRUVFODc3oJ6aWJr3DGPjCWLmkLXpWFNLLi4uMzMzMzMzPDw8
        Q0NDQEBAQkJCSUlJTk5OS0tLUlJSVVVVUlFPu8DFSY/xJHTkInPkh7PxwcPHp6WjpKKepKKepaKepaKe
        paKeoJ2Z1tLNZJ/xJHXkLHrooMDrbGhiREREPz8/Nzc3Ozs7QUFBQEBAW1tbYWFhX19fVVVVVlZWVVVV
        TU1NkY2HncP4Gm3hKHXiI3LiSo7uZaDzaaPzaqPzaqPzaqPzaqPzaqPzZZ7uOIDjMnzjN4Dno8Hrc29p
        U1NTV1dXUlJSU1NTTk5OQkJCYGBgYGBgXV1dVFRUVVVVVVVVVFRUUVBPvb6+dqv3GWvfI3HfI3HfIG/f
        H2/fH2/fH2/fH2/fH2/fH2/fInHfMnziQYXjQobmpMHqcm5oUVFRVVVVVVVVXV1dY2NjXFxcX19fYGBg
        XV1dVFRUVVVVVVVVVVVVUlJSW1lXvr6/nML2RovrJnXiIXHfIHDfIHDfIHDfIHDfIHDfI3LgLHfhN37j
        Q4bkQofnpMPtc29pUVFRVVVVVFRUW1tbYWFhYGBgX19fYGBgXV1dVFRUVVVVVVVVVVVVVVVVUlJSUlFQ
        kIyGsbe+rsLeqMTqpMLrpMLrpMLrpMLrpcLrpsPsp8TsqsbsrMftqcbtxNHhY2JfUlJSVVVVVFRUW1tb
        YWFhX19fX19fYGBgXV1dVFRUVVVVVVVVVVVVVVVVVVVVVFRUTU1NUE9NZGBcc25pd3Ntd3Ntd3Ntd3Nt
        d3Ntd3Ntd3JtdnJtdnJtdnJtZ2ZjU1NTVVVVVVVVVFRUW1tbYWFhX19fX19fYGBgXV1dVFRUVVVVVVVV
        VVVVVVVVVVVVVVVVVVVVVVVVU1NTUVFRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlJSVVVV
        VVVVVVVVVFRUW1tbYWFhX19fX19fYGBgXV1dVFRUVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
        VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVFRUW1tbYWFhX19fX19fYGBg
        XV1dVFRUVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
        VVVVVVVVVVVVVVVVVVVVVVVVVFRUW1tbYWFhX19fXV1dX19fYGBgU1NTVFRUVFRUVFRUVFRUVFRUVFRU
        VFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUU1NTXl5e
        YWFhXl5eb29vWFhYZmZmYGBgXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1d
        XV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dXV1dYGBgZmZmWVlZampqv7+/U1NTWVlZYGBgYGBgYGBg
        YGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBg
        YGBgYGBgYGBgWVlZU1NTtbW1////vb29c3NzX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
        X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fcHBwt7e3////AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>